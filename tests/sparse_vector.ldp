function SparseVector(T, N, epsilon : num_0; q : list num_*)
returns(out : list bool_0)
# precondition for_all i. -1<=(q[i])<=1 {
    eta_1 := Lap (2/epsilon);
    T_threshold := T + eta_1;
    c1 := 0; c2 := 0; i := 0;
    while (c1 < N) {
        eta_2 := Lap (4N/epsilon);
        if (q[i] = eta_2 > T_threshold) {
            out := true::out;
            c1 := c1 + 1;
        }
        else {
            out := false::out;
            c2 := c2 + 1;
        }
        i := i + 1;
    }
}